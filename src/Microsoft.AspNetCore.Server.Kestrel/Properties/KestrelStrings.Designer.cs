// <auto-generated />
namespace Microsoft.AspNetCore.Server.Kestrel
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class KestrelStrings
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.AspNetCore.Server.Kestrel.KestrelStrings", typeof(KestrelStrings).GetTypeInfo().Assembly);

        /// <summary>
        /// Invalid IP address in configuration: {configAddress}.
        /// </summary>
        internal static string InvalidIp
        {
            get => GetString("InvalidIp");
        }

        /// <summary>
        /// Invalid IP address in configuration: {configAddress}.
        /// </summary>
        internal static string FormatInvalidIp(object configAddress)
            => string.Format(CultureInfo.CurrentCulture, GetString("InvalidIp", "configAddress"), configAddress);

        /// <summary>
        /// Invalid port in configuration: {configPort}.
        /// </summary>
        internal static string InvalidPort
        {
            get => GetString("InvalidPort");
        }

        /// <summary>
        /// Invalid port in configuration: {configPort}.
        /// </summary>
        internal static string FormatInvalidPort(object configPort)
            => string.Format(CultureInfo.CurrentCulture, GetString("InvalidPort", "configPort"), configPort);

        /// <summary>
        /// No certificate found for endpoint {endPoint}.
        /// </summary>
        internal static string NoCertForEndpoint
        {
            get => GetString("NoCertForEndpoint");
        }

        /// <summary>
        /// No certificate found for endpoint {endPoint}.
        /// </summary>
        internal static string FormatNoCertForEndpoint(object endPoint)
            => string.Format(CultureInfo.CurrentCulture, GetString("NoCertForEndpoint", "endPoint"), endPoint);

        /// <summary>
        /// Unable to configure HTTPS endpoint. For information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.
        /// </summary>
        internal static string UnableToConfigureHttps
        {
            get => GetString("UnableToConfigureHttps");
        }

        /// <summary>
        /// Unable to configure HTTPS endpoint. For information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.
        /// </summary>
        internal static string FormatUnableToConfigureHttps()
            => GetString("UnableToConfigureHttps");

        /// <summary>
        /// No HTTPS certificate was found for development. For information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.
        /// </summary>
        internal static string NoCertFoundLog
        {
            get => GetString("NoCertFoundLog");
        }

        /// <summary>
        /// No HTTPS certificate was found for development. For information on configuring HTTPS see https://go.microsoft.com/fwlink/?linkid=848054.
        /// </summary>
        internal static string FormatNoCertFoundLog()
            => GetString("NoCertFoundLog");

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
