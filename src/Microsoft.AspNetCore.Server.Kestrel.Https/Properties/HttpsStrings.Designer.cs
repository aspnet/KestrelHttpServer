// <auto-generated />
namespace Microsoft.AspNetCore.Server.Kestrel.Https
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class HttpsStrings
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.AspNetCore.Server.Kestrel.Https.HttpsStrings", typeof(HttpsStrings).GetTypeInfo().Assembly);

        /// <summary>
        /// Failed to authenticate HTTPS connection.
        /// </summary>
        internal static string AuthenticationFailed
        {
            get => GetString("AuthenticationFailed");
        }

        /// <summary>
        /// Failed to authenticate HTTPS connection.
        /// </summary>
        internal static string FormatAuthenticationFailed()
            => GetString("AuthenticationFailed");

        /// <summary>
        /// The server certificate parameter is required.
        /// </summary>
        internal static string ServiceCertificateRequired
        {
            get => GetString("ServiceCertificateRequired");
        }

        /// <summary>
        /// The server certificate parameter is required.
        /// </summary>
        internal static string FormatServiceCertificateRequired()
            => GetString("ServiceCertificateRequired");

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
